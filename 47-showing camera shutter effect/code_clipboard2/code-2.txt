for frame in range(height):
    backgnd = np.zeros_like(plane, dtype=np.uint8)
    propeller = np.zeros_like(plane, dtype=np.bool)
    angle = 2 * np.pi * (frame / height)
    for blade in range(num_propeller_blades):
        phase = np.exp(1j * (angle + blade * np.pi / 
                      (num_propeller_blades / 2)))
        ellipse = abs(plane - 0.48 * height * phase) + abs(plane)
        propeller |= ellipse < 0.49 * height

    bentprop[frame] = propeller[frame]
    shutter_pan = [f for f in range(frame, min(frame + 3,
                                    height - 3))]
    colors = ("white", "black", "red", "blue")
    rgbcolors = np.array(list(map(root.winfo_rgb, colors))) / 256
    composite = np.maximum.reduce((backgnd, propeller * 1,
                                   bentprop * 2))
    composite[shutter_pan] = 3
    rgb = rgbcolors.astype(np.uint8)[composite]
    image = ImageTk.PhotoImage(Image.fromarray(rgb, mode="RGB"))
    stage.config(image=image)
    root.update()