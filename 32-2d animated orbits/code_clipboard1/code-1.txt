import numpy as np
from PyAstronomy import pyasl
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import mpl_toolkits.mplot3d.axes3d as p3
orbit = pyasl.KeplerEllipse(a=1.0, per=1.0, e=0.5, Omega=0.0, i=10.0, w=90.0)
t = np.linspace(0, 4, 200)
pos = orbit.xyzPos(t)

fig, ax = plt.subplots()

# Plot the orbit (in cyan this time)
plt.plot(pos[::, 1], pos[::, 0], 'c-.')

# Create the red dot as a tuple, and start it at perigee
red_dot, = plt.plot(pos[0][1], pos[0][0], 'ro')
# note the "," after red_dot which creates a tuple

def animate(i):
    red_dot.set_data(pos[i][1], pos[i][0])
    return red_dot,

# create animation using the animate() function
myAnimation = animation.FuncAnimation(fig, animate,
                       frames=np.arange(0, len(t), 1), interval=40,
                       blit=True, repeat=True)


plt.plot(0, 0, 'bo', markersize=9, label="Earth")
plt.tick_params(
    axis='both',  # changes apply to both axes
    which='both',  # both major and minor ticks are affected
    bottom=False,  # ticks along the bottom edge are off
    top=False,  # ticks along the top edge are off
    labelbottom=False,  # labels along the bottom edge are off
    left=False,
    labelleft=False)
 
plt.title('Orbital Simulation')
#plt.show()
plt.savefig("output/chap5_3.png")