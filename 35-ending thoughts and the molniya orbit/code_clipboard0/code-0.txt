import numpy as np
from PyAstronomy import pyasl
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import mpl_toolkits.mplot3d.axes3d as p3
from matplotlib.animation import PillowWriter
writer = PillowWriter(fps=21)

a = 1.0
per = 1.0
e = 0.0
Omega = 0.0
i = 0.0
w = 0.0

orbit = pyasl.KeplerEllipse(a=a, per=per, e=e, Omega=Omega,
                            i=i, w=w)

# Get a time axis
t = np.linspace(0, 2, 200)

# Calculate the orbit position at the given points
# in a Cartesian coordinate system.
pos = orbit.xyzPos(t)

fig = plt.figure()
ax = p3.Axes3D(fig)


ax.plot([0], [0], [0], 'bo', markersize=9, label="Earth")
 
ax.plot(pos[::, 1], pos[::, 0], pos[::, 2], 'k-',
        label="Satellite Trajectory")

red_dot, = ax.plot(pos[::, 1], pos[::, 0], pos[::, 2], 'ro', 
                   label="Satellite")

def animate(i, pos, red_dot):
    red_dot.set_data([pos[i][1], pos[i][0]])
    red_dot.set_3d_properties(pos[i][2])
    return red_dot,


# create animation using the animate() function
ani = animation.FuncAnimation(fig, animate, len(t), fargs=(pos, red_dot),
                              interval=100, blit=False)

# Hide grid lines
ax.grid(False)

# Hide axes ticks
ax.set_xticks([])
ax.set_yticks([])
ax.set_zticks([])

if e == 0.737 and i == 63.4:
    plt.style.use('default')
    plt.legend()
    ani.save('output/chap5_molniya.gif', writer=writer)
else:
    print("Check your orbital parameters! Something isn't right...")